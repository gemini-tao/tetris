{"version":3,"sources":["components/Decorate/style.module.scss","containers/style.module.scss","store/types/index.ts","locales/index.ts","components/Decorate/index.tsx","components/Pixel/index.tsx","components/Screen/index.tsx","containers/index.tsx","utils/index.ts","store/actions/index.ts","utils/serviceWorker.ts","store/reducers/matrix.ts","store/reducers/index.ts","store/reducers/locales.ts","store/sagas/index.ts","store/index.ts","index.tsx","components/Pixel/style.module.scss","components/Screen/style.module.scss"],"names":["module","exports","wrapper","decorate","logo","center","dotsLeft","dotsRight","dot","screen","app","Types","LOCALES","en-US","require","zh-CN","memo","_ref","children","react_default","a","createElement","className","style","intl","get","Block","highlight","x","y","width","fillColor","fillHighlight","fillDefault","height","opacity","concat","strokeDefault","defaultProps","Screen","$ref_Panl","React","createRef","state","w","calcWidth","_this","current","setState","clientWidth","this","window","addEventListener","matrix","props","pixelWidth","length","components_Decorate","container","ref","panl","map","row","i","b","j","Pixel","key","Component","App","initLocales","switchLocales","locales","updateLocales","setTimeout","location","href","origin","pathname","str","init","currentLocale","lang","name","reg","RegExp","r","search","substr","match","decodeURIComponent","getUrlParam","hasOwnProperty","loadLocales","prevProps","components_Screen","connect","dispatch","type","UPDATE_LOCALES","payload","action","isFirst","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","waiting","onUpdate","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","catch","error","reload","initState","Array","fill","combineReducers","arguments","undefined","UPDATE_MATRIX","incrementAsync","fetchData","watchIncrementAsync","rootSaga","regenerator_default","wrap","_context","prev","next","delay","put","ADD_COUNT","num","stop","_marked","fn","Promise","resolve","reject","greeting","task","_context2","call","sent","fork","_marked2","_context3","takeEvery","ADD_COUNT_ASYNC","_marked3","_context4","_marked4","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","persistedReducer","persistReducer","rootReducer","sagaMiddleware","createSagaMiddleware","configStore","store","createStore","applyMiddleware","persistor","persistStore","run","configureStore","ReactDOM","render","es","integration_react","containers","document","getElementById","URL","process","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker","confirm","postMessage","e","version"],"mappings":"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","file":"static/js/main.0f46f77f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__8uAKD\",\"decorate\":\"style_decorate__2yVS0\",\"logo\":\"style_logo__103MU\",\"center\":\"style_center__3xGi9\",\"dotsLeft\":\"style_dotsLeft__2JHgU\",\"dotsRight\":\"style_dotsRight__YUdKB\",\"dot\":\"style_dot__1Dn0v\",\"screen\":\"style_screen__22mLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__1hNgg\"};","/*\n * @Author: lifan\n * @Date: 2018-12-12 13:31:05\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-20 15:36:09\n */\n\n/* eslint-disable no-unused-vars */\nenum Types {\n  ADD_COUNT = 'ADD_COUNT',\n  ADD_COUNT_ASYNC = 'ADD_COUNT_ASYNC',\n  REDUCE_COUNT = 'REDUCE_COUNT',\n  UPDATE_LOCALES = 'UPDATE_LOCALES',\n  GAME_OVER = 'GAME_OVER', // 游戏结束\n  PAUSE = 'PAUSE', // 暂停\n  START = 'START', // 开始\n  RESTART = 'RESTART', // 重新开始\n  RORATE = 'RORATE', // 旋转\n  SET_SPEED = 'SET_SPEED', // 设置速度\n  SET_DEFAULT_LINES = 'SET_DEFAULT_LINES', // 设置初始行数\n  UPDATE_MATRIX = 'UPDATE_MATRIX', // 更新矩阵\n}\n\nexport default Types;\n","/*\n * @Author: lifan\n * @Date: 2018-12-14 10:16:11\n * @Last Modified by:   lifan\n * @Last Modified time: 2018-12-14 10:16:11\n */\nexport const LOCALES = {\n  'en-US': require('./en-US.json'),\n  'zh-CN': require('./zh-CN.json'),\n};\n\nexport type TYPE_LOCALES = keyof typeof LOCALES;\n","import React, { memo, ReactNode } from 'react';\nimport intl from 'react-intl-universal';\nimport style from './style.module.scss';\n\ninterface DecorateProps {\n  children: ReactNode;\n}\n\nconst Decorate = ({ children }: DecorateProps) => (\n  <div className={style.wrapper}>\n    <div className={style.decorate}>\n      <h1 className={style.logo}>\n        {\n          intl.get('gameName')\n        }\n      </h1>\n    </div>\n    <div className={style.center}>\n      <div className={style.dotsLeft}>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n      </div>\n      <div className={style.dotsRight}>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n        <span className={style.dot}></span>\n      </div>\n      <div className={style.screen}>\n        {\n          children\n        }\n      </div>\n    </div>\n  </div>\n);\n\nexport default memo(Decorate);\n","/*\n * @Author: lifan\n * @Date: 2018-12-19 09:02:19\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-20 20:30:00\n */\nimport React, { memo } from 'react';\nimport style from './style.module.scss';\n\ninterface BlockProps {\n  x: number;\n  y: number;\n  width: number;\n  highlight?: boolean;\n}\n\nconst Block = ({ highlight, x, y, width }: BlockProps) => {\n  const fillColor = highlight ? style.fillHighlight : style.fillDefault;\n  return (\n    <g>\n      <rect x={x} y={y} width={width} height={width} opacity={0} />\n      <rect x={x + 1} y={y + 1} width={width - 2} height={width - 2} className={fillColor} />\n      <rect x={x + 3} y={y + 3} width={width - 6} height={width - 6} className={`${fillColor} ${style.strokeDefault}`} />\n    </g>\n  );\n};\n\nBlock.defaultProps = {\n  highlight: false\n};\n\nexport default memo(Block);\n","/*\n * @Author: lifan\n * @Date: 2018-12-19 21:05:34\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-20 20:46:31\n */\nimport React, { Component } from 'react';\nimport Decorate from '../Decorate';\nimport Pixel from '../Pixel';\nimport style from './style.module.scss';\n\ninterface ScreenProps {\n  matrix: number[][];\n}\n\ninterface State {\n  w: number;\n}\n\nclass Screen extends Component<ScreenProps, State> {\n  private readonly $ref_Panl: React.RefObject<HTMLDivElement> = React.createRef();\n  public state = {\n    w: 0\n  }\n\n  private calcWidth = () => {\n    if (this.$ref_Panl.current) {\n      this.setState({\n        w: this.$ref_Panl.current.clientWidth\n      });\n    }\n  }\n\n  public componentDidMount() {\n    this.calcWidth();\n    window.addEventListener('resize', this.calcWidth);\n  }\n\n  public render() {\n    const { matrix } = this.props;\n    const pixelWidth = this.state.w / matrix[0].length || 10;\n\n    return (\n      <Decorate>\n        <div className={style.wrapper}>\n          <div className={style.container}>\n            <div ref={this.$ref_Panl} className={style.panl}>\n              <svg width=\"100%\" height={this.state.w * 2}>\n                {\n                  matrix.map((row, i) => (\n                    row.map((b, j) => (\n                      <Pixel key={`${i}_${j}`} width={pixelWidth} x={j * pixelWidth} y={i * pixelWidth} highlight={!!b} />\n                    ))\n                  ))\n                }\n              </svg>\n            </div>\n          </div>\n        </div>\n      </Decorate>\n    );\n  }\n}\n\nexport default Screen;\n","import React, { Component } from 'react';\nimport { Dispatch } from 'redux';\nimport { State } from '../store/reducers';\nimport { connect } from 'react-redux';\nimport intl from 'react-intl-universal';\nimport { LOCALES, TYPE_LOCALES } from '../locales';\nimport * as action from '../store/actions';\nimport { getUrlParam } from '../utils';\nimport Screen from '../components/Screen';\n\nimport style from './style.module.scss';\n\ninterface AppProps {\n  locales: TYPE_LOCALES;\n  matrix: number[][];\n  updateLocales: (locales: TYPE_LOCALES) => void;\n}\n\ninterface AppState {\n  initLocales: boolean;\n}\n\nclass App extends Component<AppProps, AppState> {\n  public state = {\n    initLocales: false\n  };\n\n  private async loadLocales(str: TYPE_LOCALES) {\n    try {\n      await intl.init({\n        currentLocale: str,\n        locales: LOCALES,\n      });\n    } finally {\n      this.setState({\n        initLocales: true\n      });\n    }\n  }\n\n  private initLocales(locales: TYPE_LOCALES) {\n    const lang = getUrlParam('lang') as TYPE_LOCALES;\n\n    if (lang && LOCALES.hasOwnProperty(lang)) {\n      this.props.updateLocales(lang);\n      this.loadLocales(lang);\n    } else {\n      this.loadLocales(locales);\n    }\n  }\n\n  private switchLocales = (locales: TYPE_LOCALES) => {\n    this.props.updateLocales(locales);\n    setTimeout(() => {\n      window.location.href = `${window.location.origin}${window.location.pathname}?lang=${locales}`;\n    }, 20);\n  }\n\n  public componentDidMount() {\n    this.initLocales(this.props.locales);\n  }\n\n  public componentDidUpdate(prevProps: AppProps) {\n    if (this.state.initLocales && prevProps.locales !== this.props.locales) {\n      this.switchLocales(this.props.locales);\n    }\n  }\n\n  public render() {\n    const { initLocales } = this.state;\n    const { matrix } = this.props;\n\n    if (!initLocales) {\n      return null;\n    }\n\n    return (\n      <div className={style.app}>\n        <Screen matrix={matrix} />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state: State) => ({\n  locales: state.locales,\n  matrix: state.matrix,\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  updateLocales: (locales: TYPE_LOCALES) => dispatch(action.updateLocales(locales)),\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(App);\n","/*\n * @Author: lifan\n * @Date: 2018-12-13 13:36:59\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-13 16:06:01\n */\n\n/**\n * 判断是否为移动端\n */\nexport const isMobile = (): boolean =>\n  /(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent);\n\n/**\n * 获取url参数\n * @param {string} name\n */\nexport const getUrlParam = (name: string) => {\n  const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`);\n  const r = window.location.search.substr(1).match(reg);\n\n  if (r != null) {\n    return decodeURIComponent(r[2]);\n  }\n\n  return;\n};\n","/*\n * @Author: lifan\n * @Date: 2018-12-12 14:50:48\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-20 15:46:16\n */\nimport Types from '../types';\nimport { TYPE_LOCALES } from '../../locales';\n\n/* eslint-disable no-use-before-define */\nexport type AddCount = ReturnType<typeof addCount>;\nexport const addCount = (num: number) => ({\n  type: <Types.ADD_COUNT>Types.ADD_COUNT,\n  payload: {\n    num\n  }\n});\n\nexport type AddCountAsync = ReturnType<typeof addCountAsync>;\nexport const addCountAsync = () => ({\n  type: <Types.ADD_COUNT_ASYNC>Types.ADD_COUNT_ASYNC,\n});\n\nexport type ReduceCount = ReturnType<typeof reduceCount>;\nexport const reduceCount = (num: number) => ({\n  type: <Types.REDUCE_COUNT>Types.REDUCE_COUNT,\n  payload: {\n    num\n  }\n});\n\nexport type UpdateLocales = ReturnType<typeof updateLocales>;\nexport const updateLocales = (locales: TYPE_LOCALES) => ({\n  type: <Types.UPDATE_LOCALES>Types.UPDATE_LOCALES,\n  payload: {\n    locales\n  }\n});\n\nexport type UpdateMatrix = ReturnType<typeof updateMatrix>;\nexport const updateMatrix = (matrix: number[][]) => ({\n  type: <Types.UPDATE_MATRIX>Types.UPDATE_MATRIX,\n  payload: {\n    matrix\n  }\n});\n\nexport type Action =\n  | AddCount\n  | AddCountAsync\n  | ReduceCount\n  | UpdateLocales\n  | UpdateMatrix;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint-disable */\nlet isFirst = false;\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      if (registration.waiting) {\n        if (config && config.onUpdate) {\n          config.onUpdate(registration);\n        }\n        return;\n      }\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              isFirst = false;\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n              isFirst = true;\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n\n  navigator.serviceWorker.addEventListener('controllerchange', () => {\n    console.log('controllerchange');\n    if (!isFirst) {\n      window.location.reload();\n      isFirst = true;\n    }\n  });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * @Author: lifan\n * @Date: 2018-12-20 15:36:36\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-20 15:49:50\n */\nimport Types from '../types';\nimport { Action } from '../actions';\n\nconst initState = new Array(20).fill(0).map(() => new Array(10).fill(0));\n\nexport default (state: number[][] = initState, action: Action) => {\n  switch (action.type) {\n    case Types.UPDATE_MATRIX:\n      return action.payload.matrix;\n    default: return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport locales from './locales';\nimport matrix from './matrix';\nimport { TYPE_LOCALES } from '../../locales';\n\nexport interface State {\n  locales: TYPE_LOCALES;\n  matrix: number[][];\n}\n\nexport default combineReducers<State>({\n  locales,\n  matrix,\n});\n","/*\n * @Author: lifan\n * @Date: 2018-12-13 13:56:58\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-14 10:21:38\n */\n\nimport Types from '../types';\nimport { Action } from '../actions';\nimport { TYPE_LOCALES } from '../../locales';\n\nexport default (state: TYPE_LOCALES = 'zh-CN', action: Action) => {\n  switch (action.type) {\n    case Types.UPDATE_LOCALES:\n      return action.payload.locales;\n    default: return state;\n  }\n};\n","import { call, put, takeEvery, fork, delay } from 'redux-saga/effects';\nimport Types from '../types';\n\nexport function* incrementAsync() {\n  yield delay(1000);\n  yield put({\n    type: Types.ADD_COUNT,\n    payload: {\n      num: 1,\n    }\n  });\n}\n\n// 模拟数据异步获取\nfunction fn() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('hello saga');\n    }, 2000);\n  });\n}\n\nfunction* fetchData() {\n  // 等待 2 秒后，打印欢迎语（阻塞）\n  const greeting = yield call(fn);\n  console.log('greeting: ', greeting);\n\n  // 立即打印 task 对象（非阻塞）\n  const task = yield fork(fn);\n  console.log('task: ', task);\n}\n\n// function* watcher() {\n//   while (true) {\n//     yield delay(1000);\n//     console.log(1000);\n//     yield fork(fetchData);\n//   }\n// }\n\nexport function* watchIncrementAsync() {\n  yield takeEvery(Types.ADD_COUNT_ASYNC, incrementAsync);\n}\n\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield fork(fetchData);\n  yield fork(watchIncrementAsync);\n}\n","/*\n * @Author: lifan\n * @Date: 2018-12-12 09:46:29\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-20 15:34:50\n */\nimport { createStore, compose, applyMiddleware, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistReducer, persistStore, PersistConfig } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst persistConfig: PersistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst sagaMiddleware  = createSagaMiddleware();\n\nexport default () => {\n  let store: Store = createStore(\n    persistedReducer,\n    composeEnhancers(\n      applyMiddleware(\n        sagaMiddleware,\n      )\n    )\n  );\n\n  const persistor = persistStore(store);\n  sagaMiddleware.run(rootSaga);\n\n  return {\n    store,\n    persistor\n  };\n};\n","/*\n * @Author: lifan\n * @Date: 2018-12-09 21:11:01\n * @Last Modified by: lifan\n * @Last Modified time: 2018-12-19 14:16:49\n */\nimport '@babel/polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './containers';\nimport * as serviceWorker from './utils/serviceWorker';\nimport configureStore from './store';\n\nimport 'normalize.css';\nimport './assets/scss/index.scss';\n\nconst configStore = configureStore();\n\nReactDOM.render(\n  <Provider store={configStore.store}>\n    <PersistGate persistor={configStore.persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n  onUpdate: (registration: ServiceWorkerRegistration) => {\n    if (confirm('监测到更新，点击更新')) {\n      try {\n        registration.waiting && registration.waiting.postMessage('skipWaiting');\n      } catch (e) {\n        window.location.reload();\n      }\n    }\n  },\n  onSuccess: () => {\n    console.log('success');\n  }\n});\n\n\nlet v: Tetris = {\n  version: '12'\n};\nconsole.log(v);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fillDefault\":\"style_fillDefault__3kZxf\",\"fillHighlight\":\"style_fillHighlight__vlGVt\",\"strokeDefault\":\"style_strokeDefault__2W4Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__3yp4u\",\"container\":\"style_container__3_OKL\",\"panl\":\"style_panl__3tA3o\"};"],"sourceRoot":""}